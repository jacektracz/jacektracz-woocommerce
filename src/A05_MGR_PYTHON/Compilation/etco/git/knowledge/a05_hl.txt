package com.misys.kgrserver.handler;

import com.misys.kgrserver.auth.AuthenticationHandler;
import com.reuters.kgl.facade.beans.*;
import com.reuters.kgl.presentation.mask.generictrading.common.event.CptyQueryIdentitiesListener;

import static com.misys.kgrserver.tools.MessageId.*;

import java.util.HashMap;
import java.util.Map;

public class HandlersLocator {
    private static final Map<Integer, Class<? extends ValueObjectHandler>> handlerMapping;

    static {
        handlerMapping = new HashMap<>();
        handlerMapping.put(RiskClassInsertVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassUpdateVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassRemoveVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetByIdentifierVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetIdentityByIdentifierVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetByNameVO.MSG_ID_INTEGER, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetByShortNameVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetIdentityByNameVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetIdentityByShortNameVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassQueryIdentityByNameVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassQueryIdentityByShortNameVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetLinkHandleVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassInsertRiskClassAssociationVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassUpdateRiskClassAssociationVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassRemoveRiskClassAssociationVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassQueryRiskClassAssociationByRateTypeVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassQueryAllRiskClassAssociationVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassSearchVO.MSG_ID, RiskClassHandler.class);
        handlerMapping.put(RiskClassGetRiskClassTotalVO.MSG_ID, RiskClassHandler.class);

        handlerMapping.put(AccessibleInsertAccessVO.MSG_ID, AccessibleHandler.class);
        handlerMapping.put(AccessibleUpdateAccessVO.MSG_ID, AccessibleHandler.class);
        handlerMapping.put(AccessibleRemoveAccessVO.MSG_ID, AccessibleHandler.class);
        handlerMapping.put(AccessibleQueryAccessVO.MSG_ID, AccessibleHandler.class);

        handlerMapping.put(LINK_NODE_IS_CHILD, LinkNodeHandler.class);
        handlerMapping.put(LINK_NODE_LINK, LinkNodeHandler.class);
        handlerMapping.put(LINK_NODE_QUERY_CHILDREN, LinkNodeHandler.class);
        handlerMapping.put(LINK_NODE_QUERY_DIRECT_CHILDREN, LinkNodeHandler.class);
        handlerMapping.put(LINK_NODE_QUERY_PARENTS, LinkNodeHandler.class);
        handlerMapping.put(LINK_NODE_QUERY_DIRECT_PARENTS, LinkNodeHandler.class);

        handlerMapping.put(ServerVersionVO.MSG_ID, AuthenticationHandler.class);
        handlerMapping.put(InitAuthenticationVO.MSG_ID, AuthenticationHandler.class);
        handlerMapping.put(ModernAuthenticationVO.MSG_ID, AuthenticationHandler.class);
        handlerMapping.put(UserAuthenticationVO.MSG_ID, AuthenticationHandler.class);
        handlerMapping.put(ClientLeavingVO.MSG_ID, AuthenticationHandler.class);

        handlerMapping.put(RISK_FACTOR_INSERT, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_UPDATE, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_REMOVE, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_GET_BY_IDENTIFIER, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_QUERY_RISK_FACTORS, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_INSERT_CUSTOM_RULES, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_UPDATE_CUSTOM_RULES, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_REMOVE_CUSTOM_RULES, RiskFactorHandler.class);
        handlerMapping.put(RISK_FACTOR_QUERY_CUSTOM_RULES, RiskFactorHandler.class);

        handlerMapping.put(RiskFactorDefinitionInsertVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionUpdateVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionRemoveVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetByIdentifierVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetMnemonicByIdentifierVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetByNameVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetMnemonicByNameVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryMnemonicByNameVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetByMnemonicVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetMnemonicByMnemonicVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryMnemonicByMnemonicVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryRateScenarioSetupVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryRiskFactorGroupVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionInsertStrikeVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionRemoveStrikeVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryStrikeVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionInsertExpiryVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionRemoveExpiryVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryExpiryVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionInsertMaturityVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionRemoveMaturityVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryMaturityVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionInsertAliasVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionRemoveAliasVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetAliasVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryAliasVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionQueryByAliasVO.MSG_ID, RiskFactorDefinitionHandler.class);
        handlerMapping.put(RiskFactorDefinitionGetAccessHandleVO.MSG_ID, RiskFactorDefinitionHandler.class);

        handlerMapping.put(RateTypeInsertVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeUpdateVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetByIdentifierVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByIdentifierVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetByNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetByShortNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByShortNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByShortNameVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeInsertDefaultStrikeVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeUpdateDefaultStrikeVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveDefaultStrikeVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultStrikeVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeInsertDefaultExpiryVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveDefaultExpiryVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultExpiryVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultMaturityTenorVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeInsertRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeUpdateRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryAllRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryMnemonicVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetAccessHandleVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByShortNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByShortNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultExpiryTenorVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeInsertDefaultMaturityVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveDefaultMaturityVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultMaturityVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryDefaultMaturityTenorVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeInsertRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeUpdateRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeRemoveRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryAllRateCheckingParameterVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryMnemonicVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetAccessHandleVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeGetIdentityByShortNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);
        handlerMapping.put(RateTypeQueryIdentityByShortNameWithoutAccessVO.MSG_ID, RateTypeHandler.class);


        handlerMapping.put(UserConfigGetVO.MSG_ID, UserConfigHandler.class);
        handlerMapping.put(UserConfigUpdateVO.MSG_ID, UserConfigHandler.class);

        handlerMapping.put(SetupGetVO.MSG_ID, SetupHandler.class);
        handlerMapping.put(SetupQueryCustomLabelVO.MSG_ID, SetupHandler.class);

        handlerMapping.put(ColourGetByIdentifierVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourGetByNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourGetByShortNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourGetIdentityByNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourGetIdentityByShortNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourGetIdentityByIdentifierVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourQueryIdentityByShortNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourQueryIdentityByNameVO.MSG_ID, ColourHandler.class);
        handlerMapping.put(ColourQueryVO.MSG_ID, ColourHandler.class);

        handlerMapping.put(UserInsertUserExcessVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserSetReceiveModeVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetReceiveModeVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserExcessInsertVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryUserExcessVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveUserExcessVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserUpdateUserExcessVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserInsertVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserUpdateVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetIdentityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserLinkVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveLinkVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryDirectChildrenVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryDirectParentsVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryChildrenVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryParentsVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetEntityIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetEntityIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryEntityIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryEntityIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserIsChildVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryAliasVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserUpdateUserLoginVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserBindVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserUnBindVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserAccessConfigurationInsertVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserAccessConfigurationUpdateVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserAccessConfigurationRemoveVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryAccessConfigurationVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeIdentityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeIdentityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityIdentityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserGetPurposeEntityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeEntityIdentityByIdentifierVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeEntityIdentityByShortNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryPurposeEntityIdentityByNameVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserInsertValidatorToUserVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveValidatorToUserVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryValidatorToUserByUserApprovalVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserInsertValidatorToProfileVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveValidatorToProfileVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryValidatorToProfileByUserApprovalVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserInsertValidatorToRuleVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserUpdateValidatorToRuleVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveValidatorToRuleVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryValidatorToRuleVO.MSG_ID, UserHandler.class);
        handlerMapping.put(DataSetInsertVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserRemoveDataSetVO.MSG_ID, UserHandler.class);
        handlerMapping.put(UserQueryDataSetVO.MSG_ID, UserHandler.class);

        handlerMapping.put(KNSHeartbeatVO.MSG_ID_INTEGER, HeartbeatHandler.class);
        handlerMapping.put(KISHeartbeatVO.MSG_ID_INTEGER, HeartbeatHandler.class);
        handlerMapping.put(TaskServerHeartbeatVO.MSG_ID_INTEGER, HeartbeatHandler.class);
        handlerMapping.put(KRMSHeartbeatVO.MSG_ID_INTEGER, HeartbeatHandler.class);
        handlerMapping.put(KNAHeartbeatVO.MSG_ID_INTEGER, HeartbeatHandler.class);

        handlerMapping.put(CurrencyQueryDVVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetDeltaVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyAcceptByIdentifierVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyRejectByIdentifierVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyInsertVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyUpdateVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyRemoveVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetByIdentifierVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetByNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetByShortNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetIdentityByNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetIdentityByShortNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetIdentityByIdentifierVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryIdentityByShortNameVO.MSG_ID, CurrencyHandler.class);

        handlerMapping.put(CurrencyQueryIdentityByNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyLinkVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyRemoveLinkVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryDirectChildrenVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryDirectParentsVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryChildrenVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryParentsVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryWeightsVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyUpdateWeightVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetEntityIdentityByNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyGetEntityIdentityByShortNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryEntityIdentityByShortNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryEntityIdentityByNameVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyLockInsertVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyLockUpdateVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyLockRemoveVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryLocksVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyIsChildVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQuerySupervisoryHaircutVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyUpdateSupervisoryHaircutVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayInsertWeekHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayRemoveWeekHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayInsertVariableHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayRemoveVariableHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayInsertFixedHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayRemoveFixedHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayInsertFloatingHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayRemoveFloatingHolidayVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(HolidayQueryHolidaysVO.MSG_ID, CurrencyHandler.class);
        handlerMapping.put(CurrencyQueryDVDBVO.MSG_ID, CurrencyHandler.class);

        handlerMapping.put(OfficeGetByIdentifierVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeGetByNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeGetByShortNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeGetIdentityByNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeGetIdentityByShortNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeGetIdentityByIdentifierVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeQueryIdentityByShortNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeQueryIdentityByNameVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeInsertCLSCurrencyVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeRemoveCLSCurrencyVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeQueryCLSCurrencyVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeInsertVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeUpdateVO.MSG_ID, OfficeHandler.class);
        handlerMapping.put(OfficeRemoveVO.MSG_ID, OfficeHandler.class);

        handlerMapping.put(SourceQueryIdentityByNameVO.MSG_ID, SourceHandler.class);
        handlerMapping.put(SourceQueryIdentityByShortNameVO.MSG_ID, SourceHandler.class);
        handlerMapping.put(SourceGetByIdentifierVO.MSG_ID, SourceHandler.class);
        handlerMapping.put(SourceInsertVO.MSG_ID, SourceHandler.class);

        handlerMapping.put(FuncLogSetupInterfaceGetByUserIdVO.MSG_ID, FuncLogSetupInterfaceHandler.class);

        handlerMapping.put(KgrLicenseStatusGetVO.MSG_ID, KgrLicenseStatusHandler.class);

        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_BY_IDENTIFIER, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_INSERT, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_UPDATE, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_REMOVE, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_BY_IDENTIFIER, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_IDENTITY_BY_IDENTIFIER, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_BY_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_BY_SHORT_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_IDENTITY_BY_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_GET_IDENTITY_BY_SHORT_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_QUERY_IDENTITY_BY_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_QUERY_IDENTITY_BY_SHORT_NAME, TenorHandler.class);
        handlerMapping.put(TenorHandler.KNEL_TENOR_QUERY_TENORY_BY_SHORT_NAME, TenorHandler.class);


        handlerMapping.put(RateScenarioSetupInsertVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupUpdateVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupRemoveVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetByIdentifierVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetIdentityByIdentifierVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetByNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetByShortNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetIdentityByNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetIdentityByShortNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupQueryIdentityByNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupQueryIdentityByShortNameVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupInsertGroupValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupRemoveGroupValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupQueryGroupValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupInsertValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupRemoveValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupQueryValueVO.MSG_ID, RateScenarioSetupHandler.class);
        handlerMapping.put(RateScenarioSetupGetAccessHandleVO.MSG_ID, RateScenarioSetupHandler.class);

        handlerMapping.put(CptyQueryIdentityByShortNameVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyGetByIdentifierVO .MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyGetByNameVO .MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyGetByShortNameVO .MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyInsertVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryIdentityByCodeVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryIdentityByNameVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryChildrenVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryLocksVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryAccessVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryCodifierElementVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryCLSCurrencyVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryRatingsVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryHistoricalRatingsVO.MSG_ID, CptyHandler.class);
        handlerMapping.put(CptyQueryHistoricalVO.MSG_ID, CptyHandler.class);
        
        
        handlerMapping.put(FolderHandler.MSG_FolderInsertVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderUpdateVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderRemoveVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderGetByIdentifierVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderGetIdentityByIdentifierVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderGetByNameVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderGetByShortNameVO(), FolderHandler.class);        
        handlerMapping.put(FolderHandler.MSG_FolderGetIdentityByNameVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderGetIdentityByShortNameVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderQueryIdentityByShortNameVO(), FolderHandler.class);
        handlerMapping.put(FolderHandler.MSG_FolderQueryIdentityByNameVO(), FolderHandler.class);
	    handlerMapping.put(FolderQueryIdentityByCodeVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderLinkVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderRemoveLinkVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryDirectChildrenVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryDirectParentsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryChildrenVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryParentsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryDVVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderGetEntityIdentityByNameVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderGetEntityIdentityByShortNameVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryEntityIdentityByShortNameVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryEntityIdentityByNameVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderInsertCodifierElementVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderUpdateCodifierElementVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderRemoveCodifierElementVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryCodifierElementVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderIsChildVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderAccessInsertVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderAccessUpdateVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderAccessRemoveVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryAccessVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderInsertFolderCapitalConstantsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderUpdateFolderCapitalConstantsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderRemoveFolderCapitalConstantsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryFolderCapitalConstantsVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderLockInsertVO.MSG_ID, FolderHandler.class);
	    //handlerMapping.put(FolderLockUpdateVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(11013, FolderHandler.class);
	    handlerMapping.put(FolderLockRemoveVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryLocksVO.MSG_ID, FolderHandler.class);
	    handlerMapping.put(FolderQueryDVDBVO.MSG_ID, FolderHandler.class);

        handlerMapping.put(SimuPNLSetInsertVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetUpdateVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetRemoveVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetByIdentifierVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetIdentityByIdentifierVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetIdentityByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetIdentityByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryIdentityByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryIdentityByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryIdentityByShortNameAndTypeVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryIdentityByNameAndTypeVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeByIdentifierVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeIdentityByIdentifierVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeIdentityByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetGetTypeIdentityByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryTypeIdentityByShortNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetQueryTypeIdentityByNameVO.MSG_ID, SimuPNLSetHandler.class);
        handlerMapping.put(SimuPNLSetHasDataAccessVO.MSG_ID, SimuPNLSetHandler.class);

        handlerMapping.put(MarketRiskProcessSetupInsertVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupUpdateVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupRemoveVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetByIdentifierVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetIdentityByIdentifierVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetByNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetByShortNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetIdentityByNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetIdentityByShortNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupQueryIdentityByNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupQueryIdentityByShortNameVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupGetAccessHandleVO.MSG_ID, MarketRiskProcessSetupHandler.class);
        handlerMapping.put(MarketRiskProcessSetupStartVO.MSG_ID, MarketRiskProcessSetupHandler.class);

        handlerMapping.put(DealFilterInsertVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterUpdateVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterRemoveVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetByIdentifierVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetIdentityByIdentifierVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetByNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetByShortNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetIdentityByNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetIdentityByShortNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterQueryIdentityByNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterQueryIdentityByShortNameVO.MSG_ID, DealFilterHandler.class);
        handlerMapping.put(DealFilterGetAccessHandleVO.MSG_ID, DealFilterHandler.class);

        handlerMapping.put(MarketRiskTaskBuilderCreateMarketRiskTaskVO.MSG_ID, MarketRiskTaskBuilderHandler.class);
    }

    public static ValueObjectHandler getHandler(final int key) throws InstantiationException, IllegalAccessException, HandlerLocationException {
        final Class<? extends ValueObjectHandler> handler = handlerMapping.get(key);
        if (handler == null) {
            throw new HandlerLocationException(key);
        }
        return handler.newInstance();
    }
}
